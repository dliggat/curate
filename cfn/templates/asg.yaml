AWSTemplateFormatVersion: "2010-09-09"

Description: ASG to process CUR report entries

Parameters:
  ProjectName:
    Type: String
    Description: Name for this project; e.g. downtime-notifier, dynamodb-scaler

  EnvironmentName:
    Type: String
    Description: Name for this environment; e.g. development, staging, production

  VpcExportIdentifier:
    Type: String

  SubnetAZ0ExportIdentifier:
    Type: String

  SubnetAZ1ExportIdentifier:
    Type: String

  GitRepo:
    Type: String

  KeypairName:
    Type: AWS::EC2::KeyPair::KeyName

  AmiId:
    Type: AWS::EC2::Image::Id

  InstanceType:
    Type: String
    Description: The size of the instance

  BlockVolumeSize: 
    Type: String
    Description: The size of the root block device volume in GBs
    Default: 20

  BlockDeviceName:
    Type: String
    Description: The block device mapping name, see https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/nvme-ebs-volumes.html
    Default: "/dev/xvda"

  SpotPrice:
    Type: String
    Description: The Maximum price for the instance you want to pay (Note you will be charged based on the current price)

  AsgMinSize:
    Default: 0
    Description: Minimum number of instances in the ASG.
    Type: Number
    MinValue: 0

  AsgMaxSize:
    Default: 10
    Description: Maximum number of instances in the ASG.
    Type: Number
    MinValue: 0
    MaxValue: 20

  AsgEvaluationPeriods:
    Default: 1
    Description: Evaluation periods for scale-out / scale-in actions
    Type: Number
    MinValue: 1

  AsgEvaluationPeriodDuration:
    Default: 60
    Description: Evaluation period duration (secs) for scale-out / scale-in actions
    Type: Number
    MinValue: 60

  AsgCooldown:
    Default: 30
    Description: Scaling policy cooldown duration (secs)
    Type: Number
    MinValue: 10

  AsgWarmup:
    Default: 300
    Description: Steped Scaling policy warmup duration (secs)
    Type: Number
    MinValue: 10

  AsgScaleOutThreshold:
    Default: 1
    Description: Queue depth threshold for scale-out
    Type: Number
    MinValue: 1

  AsgScaleInThreshold:
    Default: 1
    Description: Queue depth threshold for scale-in
    Type: Number

  AsgScaleInAdjustment:
    Default: -1
    Description: Queue depth threshold for scale-out
    Type: Number


Resources:
  IamRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Sid: 'PermitAssumeRoleEc2'
            Action:
              - sts:AssumeRole
            Effect: Allow
            Principal:
              Service:
                - ec2.amazonaws.com
      Path: /
      # ManagedPolicyArns:
      #   - arn:aws:iam::aws:policy/AdministratorAccess
      Policies:
        - PolicyName: curate-permissions
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - "sts:AssumeRole"
                Resource: "*"
              - Effect: Allow
                Action:
                  - "sqs:ChangeMessageVisibility"
                  - "sqs:ChangeMessageVisibilityBatch"
                  - "sqs:DeleteMessage"
                  - "sqs:DeleteMessageBatch"
                  - "sqs:ReceiveMessage"
                Resource:
                  "Fn::ImportValue":
                    "Fn::Join":
                      - "-"
                      - - { Ref: ProjectName }
                        - { Ref: EnvironmentName }
                        - queue
                        - arn
              - Effect: Allow
                Action:
                  - athena:GetQueryExecution
                  - athena:GetQueryResults
                  - athena:RunQuery
                  - athena:StartQueryExecution
                  - glue:CreateDatabase
                  - glue:CreateTable
                  - glue:GetDatabase
                  - glue:GetTable
                Resource:
                  - "*"
              - Effect: Allow
                Action:
                  - s3:GetBucketLocation
                  - s3:GetObject
                  - s3:ListBucket
                  - s3:ListBucketMultipartUploads
                  - s3:ListMultipartUploadParts
                  - s3:AbortMultipartUpload
                  - s3:CreateBucket
                  - s3:PutObject
                Resource:
                  - "arn:aws:s3:::aws-athena-query-results-*"
              - Effect: Allow
                Action:
                  - s3:GetBucketLocation
                  - s3:ListBucket
                  - s3:GetObject
                  - s3:ListObjects
                  - s3:PutObject
                Resource:
                  - "Fn::ImportValue":
                      "Fn::Join":
                        - "-"
                        - - { Ref: ProjectName }
                          - { Ref: EnvironmentName }
                          - bucket
                          - arn
                  - "Fn::Join":
                    - ""
                    - - "Fn::ImportValue":
                          "Fn::Join":
                            - "-"
                            - - { Ref: ProjectName }
                              - { Ref: EnvironmentName }
                              - bucket
                              - arn
                      - "/*"
              - Effect: Allow
                Action:
                  - cloudwatch:PutMetricData
                Resource:
                  - "*"
              - Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                  - logs:DescribeLogStreams
                Resource:
                  - "Fn::Join":
                    - ""
                    - - "arn:aws:logs:"
                      - { Ref: "AWS::Region" }
                      - ":"
                      - { Ref: "AWS::AccountId" }
                      - ":log-group:curate:*"

  IamProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Path: /
      Roles:
        - Ref: IamRole

  SecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      VpcId:
        "Fn::ImportValue": { Ref: VpcExportIdentifier }
      GroupDescription:
        "Fn::Join":
          - "-"
          - - { Ref: ProjectName }
            - { Ref: EnvironmentName }
            - "sg"
      Tags:
        - Key: Name
          Value:
            "Fn::Join":
              - "-"
              - - { Ref: ProjectName }
                - { Ref: EnvironmentName }
                - "sg"

  LaunchConfig:
    Type: AWS::AutoScaling::LaunchConfiguration
    Properties:
      ImageId: { Ref: AmiId }
      KeyName: { Ref: KeypairName }
      IamInstanceProfile: { Ref: IamProfile }
      InstanceType: { Ref: InstanceType }
      SpotPrice: { Ref: SpotPrice }
      SecurityGroups:
        - { Ref: SecurityGroup }
      EbsOptimized: "true"
      BlockDeviceMappings:
        - DeviceName: { Ref: BlockDeviceName } 
          Ebs: 
            VolumeSize: { Ref: BlockVolumeSize }
            VolumeType: "gp2"
            DeleteOnTermination: "true"
      UserData:
        "Fn::Base64":
          "Fn::Sub":
            - |-
              #!/bin/bash
              yum update -y
              yum install -y git sl gcc mysql
              git clone ${git_repo} repo
              cd repo
              ./bin/processor --sqsqueue ${sqs_queue}
            - git_repo: { Ref: GitRepo }
              sqs_queue:
                "Fn::ImportValue":
                  "Fn::Join":
                    - "-"
                    - - { Ref: ProjectName }
                      - { Ref: EnvironmentName }
                      - queue
                      - url


  Asg:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      Tags:
        - Key: Name
          Value:
            "Fn::Join":
              - "-"
              - - { Ref: ProjectName }
                - { Ref: EnvironmentName }
                - "asg"
                - "worker"
          PropagateAtLaunch: true

      MinSize: { Ref: AsgMinSize }
      MaxSize: { Ref: AsgMaxSize }
      MetricsCollection:
        - Granularity: 1Minute
      LaunchConfigurationName: { Ref: LaunchConfig }
      VPCZoneIdentifier:
        - "Fn::ImportValue": { Ref: SubnetAZ0ExportIdentifier }
        - "Fn::ImportValue": { Ref: SubnetAZ1ExportIdentifier }

  ScaleOutPolicy:
    Type: AWS::AutoScaling::ScalingPolicy
    Properties:
      AdjustmentType: ChangeInCapacity
      PolicyType: StepScaling
      AutoScalingGroupName: { Ref: Asg }
      EstimatedInstanceWarmup: { Ref: AsgWarmup }
      StepAdjustments:
        - MetricIntervalLowerBound: 0
          MetricIntervalUpperBound: 9
          ScalingAdjustment: 1
        - MetricIntervalLowerBound: 9
          MetricIntervalUpperBound: 19
          ScalingAdjustment: 2
        - MetricIntervalLowerBound: 19
          ScalingAdjustment: 3

  ScaleOutAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      EvaluationPeriods: { Ref: AsgEvaluationPeriods }
      Statistic: Average
      Threshold: { Ref: AsgScaleOutThreshold }
      AlarmDescription: Alarm if SQS queue depth is above threshold
      Period: { Ref: AsgEvaluationPeriodDuration }
      AlarmActions:
        - { Ref: ScaleOutPolicy }
      Namespace: Curate
      Dimensions:
        - Name: QueueName
          Value:
            "Fn::ImportValue":
              "Fn::Join":
                - "-"
                - - { Ref: ProjectName }
                  - { Ref: EnvironmentName }
                  - queue
                  - name
      ComparisonOperator: GreaterThanOrEqualToThreshold
      MetricName: ApproximateNumberOfMessagesVisible

  ScaleInPolicy:
    Type: AWS::AutoScaling::ScalingPolicy
    Properties:
      AdjustmentType: ExactCapacity
      PolicyType: SimpleScaling
      AutoScalingGroupName: { Ref: Asg }
      ScalingAdjustment: 0
      Cooldown: { Ref: AsgCooldown }

  ScaleInAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      EvaluationPeriods: { Ref: AsgEvaluationPeriods }
      Statistic: Average
      Threshold: { Ref: AsgScaleInThreshold }
      AlarmDescription: Alarm if SQS queue depth is below threshold
      Period: { Ref: AsgEvaluationPeriodDuration }
      AlarmActions:
        - { Ref: ScaleInPolicy }
      Namespace: Curate
      Dimensions:
        - Name: QueueName
          Value:
            "Fn::ImportValue":
              "Fn::Join":
                - "-"
                - - { Ref: ProjectName }
                  - { Ref: EnvironmentName }
                  - queue
                  - name
      ComparisonOperator: LessThanThreshold
      MetricName: ApproximateNumberOfMessagesNotVisible


Outputs:
  SgIdExport:
    Value: { Ref: SecurityGroup }
    Export:
      Name:
        "Fn::Join":
          - "-"
          - - { Ref: ProjectName }
            - { Ref: EnvironmentName }
            - "SgId"
